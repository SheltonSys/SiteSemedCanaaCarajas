# Generated by Django 5.1.4 on 2025-05-11 15:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoKeeAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_unidade_ensino', models.CharField(max_length=191)),
                ('ano_serie', models.CharField(blank=True, max_length=100, null=True)),
                ('nome_turma', models.CharField(blank=True, max_length=100, null=True)),
                ('classificacao_nome', models.CharField(max_length=100)),
                ('tipo_ocorrencia_nome', models.CharField(max_length=191)),
                ('registro', models.DateTimeField()),
                ('status_descricao', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'autokee_atendimento',
            },
        ),
        migrations.CreateModel(
            name='Bairro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('logradouro_nome', models.CharField(max_length=191)),
                ('bairro_distrito', models.CharField(max_length=191)),
                ('cep', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CadastroCandidato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=191)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('senha', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Caixa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=191)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_movimento', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
            ],
        ),
        migrations.CreateModel(
            name='Certidao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('descricao', models.TextField()),
                ('data_emissao', models.DateField(auto_now_add=True)),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='certidoes/')),
            ],
        ),
        migrations.CreateModel(
            name='ConceitoLancado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aluno', models.CharField(max_length=191)),
                ('turma', models.CharField(max_length=100)),
                ('ano', models.CharField(max_length=4)),
                ('modalidade', models.CharField(max_length=100)),
                ('conceito_matematica', models.CharField(blank=True, choices=[('Excelente', 'Excelente'), ('Bom', 'Bom'), ('Regular', 'Regular'), ('Necessita Melhorar', 'Necessita Melhorar')], max_length=50, null=True)),
                ('conceito_linguagem', models.CharField(blank=True, choices=[('Excelente', 'Excelente'), ('Bom', 'Bom'), ('Regular', 'Regular'), ('Necessita Melhorar', 'Necessita Melhorar')], max_length=50, null=True)),
                ('data_lancamento', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conselho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Conteudo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='conteudos/')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coordenador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidade_ensino', models.CharField(max_length=191)),
                ('ano', models.IntegerField()),
                ('modalidade', models.CharField(max_length=191)),
                ('formato_letivo', models.CharField(max_length=191)),
                ('nome_Coordenadora', models.CharField(max_length=191)),
                ('cpf_professor', models.CharField(max_length=14)),
                ('email_Coordenadora', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='CoordenadorEI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidade_ensino', models.CharField(max_length=191)),
                ('ano', models.CharField(max_length=20)),
                ('modalidade', models.CharField(max_length=100)),
                ('formato_letivo', models.CharField(max_length=100)),
                ('nome_Coordenadora', models.CharField(max_length=191)),
                ('cpf_professor', models.CharField(max_length=14)),
                ('email_Coordenadora', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Curriculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(blank=True, max_length=191, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('telefone', models.CharField(max_length=15)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos/')),
                ('curriculo_pdf', models.FileField(blank=True, null=True, upload_to='curriculos/')),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('rg', models.CharField(blank=True, max_length=50, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro'), ('NaoInformar', 'Prefiro não informar')], max_length=15)),
                ('estado_civil', models.CharField(choices=[('Solteiro', 'Solteiro(a)'), ('Casado', 'Casado(a)'), ('Divorciado', 'Divorciado(a)'), ('Viuvo', 'Viúvo(a)')], max_length=15)),
                ('endereco', models.CharField(max_length=191)),
                ('cidade', models.CharField(default='Canaã dos Carajás', max_length=100)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('certificados_pdf', models.FileField(blank=True, null=True, upload_to='certificados/')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('ano_conclusao', models.PositiveIntegerField(blank=True, null=True)),
                ('formacao_academica', models.CharField(blank=True, max_length=191, null=True)),
                ('instituicao', models.CharField(blank=True, max_length=191, null=True)),
                ('curso', models.CharField(blank=True, max_length=191, null=True)),
                ('experiencias_texto', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CurriculoAntigo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cpf', models.CharField(blank=True, max_length=25, null=True)),
                ('nome', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('senha', models.CharField(blank=True, max_length=100, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(blank=True, max_length=100, null=True)),
                ('naturalidade', models.CharField(blank=True, max_length=100, null=True)),
                ('naturalidade_uf', models.CharField(blank=True, max_length=2, null=True)),
                ('pne', models.CharField(blank=True, max_length=3, null=True)),
                ('pne_detalhe', models.CharField(blank=True, max_length=500, null=True)),
                ('curriculo_lattes', models.CharField(blank=True, max_length=300, null=True)),
                ('logradouro', models.CharField(blank=True, max_length=300, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('cep', models.CharField(blank=True, max_length=10, null=True)),
                ('complemento', models.CharField(blank=True, max_length=500, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('municipio', models.IntegerField(blank=True, null=True)),
                ('fone1', models.CharField(blank=True, max_length=100, null=True)),
                ('fone2', models.CharField(blank=True, max_length=100, null=True)),
                ('formacao_nivel', models.IntegerField(blank=True, null=True)),
                ('formacao_instituicao', models.CharField(blank=True, max_length=200, null=True)),
                ('formacao_curso', models.CharField(blank=True, max_length=200, null=True)),
                ('formacao_situacao', models.CharField(blank=True, max_length=50, null=True)),
                ('formacao_inicio', models.CharField(blank=True, max_length=10, null=True)),
                ('formacao_conclusao', models.CharField(blank=True, max_length=10, null=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_update', models.DateTimeField(auto_now=True)),
                ('ip', models.CharField(blank=True, max_length=50, null=True)),
                ('cargo', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'curriculo_antigo',
            },
        ),
        migrations.CreateModel(
            name='DiagnoseAlunoMatematica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_usuario', models.CharField(choices=[('aluno', 'Aluno'), ('professor', 'Professor')], max_length=20)),
                ('serie', models.CharField(choices=[('3º', '3º Ano'), ('4º', '4º Ano'), ('5º', '5º Ano'), ('6º', '6º Ano')], max_length=10)),
                ('habilidade', models.CharField(max_length=100)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('acerto', models.FloatField()),
                ('erro', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='DiagnoseAlunoPortugues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_usuario', models.CharField(choices=[('aluno', 'Aluno'), ('professor', 'Professor')], max_length=20)),
                ('serie', models.CharField(choices=[('3º', '3º Ano'), ('4º', '4º Ano'), ('5º', '5º Ano'), ('6º', '6º Ano')], max_length=10)),
                ('habilidade', models.CharField(max_length=100)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('acerto', models.FloatField()),
                ('erro', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='DiagnoseInicProfPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=50)),
                ('habilidade', models.CharField(max_length=191)),
                ('descricao_habilidade', models.TextField(blank=True, null=True)),
                ('professor_401', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_403', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_404', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_406', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_408', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_409', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_410', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_413', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_414', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_415', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_417', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_421', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_423', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_426', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_428', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_429', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_430', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_431', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_432', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_433', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_434', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_435', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_436', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_437', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_438', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_439', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_441', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_442', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_447', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_451', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
                ('professor_471', models.CharField(choices=[('N', 'Não'), ('S', 'Sim')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Diretor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=191)),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('rg', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(max_length=15)),
                ('endereco', models.CharField(max_length=191)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('cidade', models.CharField(default='Canaã dos Carajás', max_length=100)),
                ('cep', models.CharField(blank=True, max_length=10, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('formacao_academica', models.CharField(blank=True, max_length=100, null=True)),
                ('curso', models.CharField(blank=True, max_length=191, null=True)),
                ('instituicao', models.CharField(blank=True, max_length=191, null=True)),
                ('ano_conclusao', models.DateField(blank=True, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_diretores/')),
                ('curriculo_pdf', models.FileField(blank=True, null=True, upload_to='diretores_curriculos/')),
                ('certificados_pdf', models.FileField(blank=True, null=True, upload_to='diretores_certificados/')),
                ('experiencia_profissional', models.TextField(blank=True, null=True)),
                ('estado_civil', models.CharField(choices=[('Solteiro', 'Solteiro(a)'), ('Casado', 'Casado(a)'), ('Divorciado', 'Divorciado(a)'), ('Viuvo', 'Viúvo(a)')], max_length=50)),
                ('sexo', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outro', 'Outro'), ('NaoInformar', 'Prefiro não informar')], max_length=50)),
                ('data_cadastro', models.DateTimeField(default=django.utils.timezone.now)),
                ('empresa', models.CharField(blank=True, max_length=191, null=True)),
                ('cargo', models.CharField(blank=True, max_length=191, null=True)),
                ('data_inicio', models.DateField(blank=True, null=True)),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='diretores_qrcodes/')),
            ],
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('NF', 'Nota Fiscal'), ('RC', 'Recibo'), ('CT', 'Contrato'), ('OT', 'Outros')], max_length=2, verbose_name='Tipo do Documento')),
                ('numero', models.CharField(max_length=50, unique=True, verbose_name='Número do Documento')),
                ('data_emissao', models.DateField(verbose_name='Data de Emissão')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição do Documento')),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='documentos_prestacao_contas/', verbose_name='Arquivo Anexado')),
                ('valor_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Total (R$)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última atualização')),
            ],
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('endereco', models.CharField(blank=True, max_length=191, null=True)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('bairro', models.CharField(blank=True, max_length=191, null=True)),
                ('cidade', models.CharField(default='Canaã dos Carajás', max_length=191)),
                ('uf', models.CharField(default='PA', max_length=2)),
                ('tipo', models.CharField(blank=True, max_length=50, null=True)),
                ('habilitado', models.BooleanField(default=True)),
                ('segmento', models.CharField(blank=True, max_length=191, null=True)),
                ('zona', models.CharField(choices=[('Rural', 'Rural'), ('Urbana', 'Urbana')], default='Urbana', max_length=50)),
                ('local_funcionamento', models.CharField(blank=True, max_length=100, null=True)),
                ('ocupacao_predio', models.CharField(blank=True, max_length=50, null=True)),
                ('compartilhado', models.BooleanField(default=False)),
                ('codigo_compartilhado', models.CharField(blank=True, max_length=50, null=True)),
                ('modalidade_ensino', models.CharField(blank=True, max_length=191, null=True)),
                ('autorizacao', models.CharField(blank=True, max_length=50, null=True)),
                ('protocolo', models.CharField(blank=True, max_length=50, null=True)),
                ('codigo_inep', models.CharField(blank=True, max_length=10, null=True)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True)),
                ('fundacao', models.DateField(blank=True, null=True)),
                ('situacao', models.CharField(blank=True, max_length=50, null=True)),
                ('distrito', models.CharField(blank=True, max_length=191, null=True)),
                ('dependencia_administrativa', models.CharField(blank=True, max_length=50, null=True)),
                ('agua_potavel', models.BooleanField(default=False)),
                ('abastecimento_agua', models.CharField(blank=True, max_length=50, null=True)),
                ('energia', models.CharField(blank=True, max_length=50, null=True)),
                ('esgotamento_sanitario', models.CharField(blank=True, max_length=50, null=True)),
                ('destinacao_lixo', models.CharField(blank=True, max_length=191, null=True)),
                ('tratamento_lixo', models.CharField(blank=True, max_length=191, null=True)),
                ('dependencias_fisicas', models.TextField(blank=True, null=True)),
                ('acessibilidade', models.TextField(blank=True, null=True)),
                ('internet', models.BooleanField(default=False)),
                ('internet_banda_larga', models.BooleanField(default=False)),
                ('equipamentos_alunos', models.TextField(blank=True, null=True)),
                ('instrumentos_pedagogicos', models.TextField(blank=True, null=True)),
                ('colegiados', models.TextField(blank=True, null=True)),
                ('equipamentos_ensino', models.TextField(blank=True, null=True)),
                ('quantidade_salas', models.IntegerField(default=0)),
                ('quantidade_turmas', models.IntegerField(default=0)),
                ('quantidade_professores', models.IntegerField(default=0)),
                ('quantidade_alunos', models.IntegerField(default=0)),
                ('capacidade_alunos', models.IntegerField(default=0)),
                ('quantidade_secretaria', models.IntegerField(default=0)),
                ('quantidade_servicos_gerais', models.IntegerField(default=0)),
                ('quantidade_merendeira', models.IntegerField(default=0)),
                ('quantidade_controladores_acesso', models.IntegerField(default=0)),
                ('diretor', models.CharField(blank=True, max_length=191, null=True)),
                ('telefone_diretor', models.CharField(blank=True, max_length=15, null=True)),
                ('email_diretor', models.EmailField(blank=True, max_length=254, null=True)),
                ('vice_diretor', models.CharField(blank=True, max_length=191, null=True)),
                ('telefone_vice_diretor', models.CharField(blank=True, max_length=15, null=True)),
                ('email_vice_diretor', models.EmailField(blank=True, max_length=254, null=True)),
                ('coordenador_pedagogico', models.CharField(blank=True, max_length=191, null=True)),
                ('telefone_coordenador_pedagogico', models.CharField(blank=True, max_length=15, null=True)),
                ('email_coordenador_pedagogico', models.EmailField(blank=True, max_length=254, null=True)),
                ('secretario', models.CharField(blank=True, max_length=191, null=True)),
                ('telefone_secretario', models.CharField(blank=True, max_length=15, null=True)),
                ('email_secretario', models.EmailField(blank=True, max_length=254, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='escolas/')),
            ],
        ),
        migrations.CreateModel(
            name='EscolaPdde',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('ano', models.IntegerField(default=2024)),
                ('status', models.CharField(choices=[('aprovado', 'Aprovado'), ('pendente', 'Pendente'), ('reprovado', 'Reprovado')], default='pendente', max_length=20)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('endereco', models.CharField(blank=True, max_length=191, null=True)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('bairro', models.CharField(blank=True, max_length=191, null=True)),
                ('cidade', models.CharField(default='Canaã dos Carajás', max_length=191)),
                ('uf', models.CharField(default='PA', max_length=2)),
                ('tipo', models.CharField(blank=True, max_length=50, null=True)),
                ('dependencia_administrativa', models.CharField(blank=True, max_length=50, null=True)),
                ('codigo_inep', models.CharField(max_length=10, unique=True)),
                ('zona', models.CharField(choices=[('Rural', 'Rural'), ('Urbana', 'Urbana')], default='Urbana', max_length=10)),
                ('procuracao', models.FileField(blank=True, null=True, upload_to='procuracoes/')),
                ('validade_procuracao', models.DateField(blank=True, null=True)),
                ('ensino', models.CharField(blank=True, help_text='Informe os níveis de ensino disponíveis na escola', max_length=191, null=True)),
                ('quantidade_salas', models.IntegerField(default=0)),
                ('quantidade_turmas', models.IntegerField(default=0)),
                ('quantidade_professores', models.IntegerField(default=0)),
                ('quantidade_alunos', models.IntegerField(default=0)),
                ('nome_conselho', models.CharField(blank=True, help_text='Nome do Conselho Escolar', max_length=191, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EscrituraFiscal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano_base', models.IntegerField()),
                ('conselho_escolar', models.CharField(max_length=191)),
                ('cnpj', models.CharField(max_length=18)),
                ('rendimentos_aplicacao', models.DecimalField(decimal_places=2, max_digits=10)),
                ('saldo_anterior', models.DecimalField(decimal_places=2, max_digits=10)),
                ('receita_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('despesas_manutencao', models.DecimalField(decimal_places=2, max_digits=10)),
                ('despesa_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('superavit_deficit', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Estudante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=150)),
                ('data_nascimento', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('matricula', models.CharField(max_length=20, unique=True)),
                ('turma', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('data', models.DateField()),
                ('local', models.CharField(max_length=300)),
                ('descricao', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=191)),
                ('rg', models.CharField(max_length=50)),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('telefone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=191)),
                ('cargo', models.CharField(max_length=100)),
                ('lotacao', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Habilidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HabilidadeMatematica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habilidade', models.CharField(max_length=100)),
                ('topico', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('serie', models.IntegerField()),
                ('tipo_ano', models.CharField(choices=[('inicial', 'Anos Iniciais'), ('final', 'Anos Finais')], default='inicial', max_length=10)),
                ('acertos', models.FloatField(default=0.0)),
                ('erros', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='HabilidadePortugues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habilidade', models.CharField(max_length=100)),
                ('topico', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('serie', models.IntegerField()),
                ('tipo_ano', models.CharField(choices=[('inicial', 'Anos Iniciais'), ('final', 'Anos Finais')], default='inicial', max_length=10)),
                ('acertos', models.FloatField(default=0.0)),
                ('erros', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='HabilidadeProf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField()),
                ('habilidade', models.CharField(max_length=191)),
                ('turma_401', models.IntegerField(default=0)),
                ('turma_403', models.IntegerField(default=0)),
                ('turma_404', models.IntegerField(default=0)),
                ('turma_406', models.IntegerField(default=0)),
                ('turma_408', models.IntegerField(default=0)),
                ('turma_409', models.IntegerField(default=0)),
                ('turma_410', models.IntegerField(default=0)),
                ('turma_413', models.IntegerField(default=0)),
                ('turma_414', models.IntegerField(default=0)),
                ('turma_415', models.IntegerField(default=0)),
                ('turma_417', models.IntegerField(default=0)),
                ('turma_421', models.IntegerField(default=0)),
                ('turma_423', models.IntegerField(default=0)),
                ('turma_426', models.IntegerField(default=0)),
                ('turma_428', models.IntegerField(default=0)),
                ('turma_429', models.IntegerField(default=0)),
                ('turma_430', models.IntegerField(default=0)),
                ('turma_431', models.IntegerField(default=0)),
                ('turma_432', models.IntegerField(default=0)),
                ('turma_433', models.IntegerField(default=0)),
                ('turma_434', models.IntegerField(default=0)),
                ('turma_435', models.IntegerField(default=0)),
                ('turma_436', models.IntegerField(default=0)),
                ('turma_437', models.IntegerField(default=0)),
                ('turma_438', models.IntegerField(default=0)),
                ('turma_439', models.IntegerField(default=0)),
                ('turma_441', models.IntegerField(default=0)),
                ('turma_442', models.IntegerField(default=0)),
                ('turma_447', models.IntegerField(default=0)),
                ('turma_451', models.IntegerField(default=0)),
                ('turma_471', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HabilidadeProfAnosFinais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField()),
                ('habilidade', models.CharField(max_length=191)),
                ('turma_101', models.IntegerField(default=0)),
                ('turma_102', models.IntegerField(default=0)),
                ('turma_103', models.IntegerField(default=0)),
                ('turma_104', models.IntegerField(default=0)),
                ('turma_105', models.IntegerField(default=0)),
                ('turma_106', models.IntegerField(default=0)),
                ('turma_107', models.IntegerField(default=0)),
                ('turma_109', models.IntegerField(default=0)),
                ('turma_110', models.IntegerField(default=0)),
                ('turma_112', models.IntegerField(default=0)),
                ('turma_114', models.IntegerField(default=0)),
                ('turma_117', models.IntegerField(default=0)),
                ('turma_119', models.IntegerField(default=0)),
                ('turma_120', models.IntegerField(default=0)),
                ('turma_121', models.IntegerField(default=0)),
                ('turma_124', models.IntegerField(default=0)),
                ('turma_126', models.IntegerField(default=0)),
                ('turma_128', models.IntegerField(default=0)),
                ('turma_129', models.IntegerField(default=0)),
                ('turma_130', models.IntegerField(default=0)),
                ('turma_131', models.IntegerField(default=0)),
                ('turma_134', models.IntegerField(default=0)),
                ('turma_135', models.IntegerField(default=0)),
                ('turma_137', models.IntegerField(default=0)),
                ('turma_138', models.IntegerField(default=0)),
                ('turma_139', models.IntegerField(default=0)),
                ('turma_140', models.IntegerField(default=0)),
                ('turma_142', models.IntegerField(default=0)),
                ('turma_143', models.IntegerField(default=0)),
                ('turma_144', models.IntegerField(default=0)),
                ('turma_145', models.IntegerField(default=0)),
                ('turma_146', models.IntegerField(default=0)),
                ('turma_147', models.IntegerField(default=0)),
                ('turma_171', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HabilidadeProfFinal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.IntegerField()),
                ('habilidade', models.CharField(max_length=191)),
                ('turma_101', models.IntegerField(default=0)),
                ('turma_102', models.IntegerField(default=0)),
                ('turma_171', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Imagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('imagem', models.ImageField(upload_to='galeria/')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
                ('meta', models.IntegerField()),
                ('resultado', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='IndicadoresTransporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_matricula', models.CharField(max_length=50, unique=True, verbose_name='Número de Matrícula')),
                ('nome_completo', models.CharField(max_length=191, verbose_name='Nome Completo')),
                ('escola', models.CharField(max_length=191, verbose_name='Escola')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, verbose_name='Sexo')),
                ('turno', models.CharField(choices=[('Matutino', 'Matutino'), ('Vespertino', 'Vespertino'), ('Noturno', 'Noturno'), ('Integral', 'Integral')], max_length=20, verbose_name='Turno')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='O telefone deve estar no formato (XX) XXXXX-XXXX.', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('nivel_escolaridade', models.CharField(max_length=100, verbose_name='Nível de Escolaridade')),
                ('endereco', models.CharField(max_length=191, verbose_name='Endereço')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cep', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='O CEP deve estar no formato XXXXX-XXX.', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('codigo_rota', models.CharField(max_length=50, verbose_name='Código da Rota')),
                ('email_responsavel', models.EmailField(max_length=254, verbose_name='E-mail do Responsável')),
                ('cpf_responsavel', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='O CPF deve estar no formato XXX.XXX.XXX-XX.', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF do Responsável')),
                ('nome_responsavel', models.CharField(max_length=191, verbose_name='Nome do Responsável')),
                ('parentesco', models.CharField(choices=[('Pai', 'Pai'), ('Mãe', 'Mãe'), ('Tio/Tia', 'Tio/Tia'), ('Avô/Avó', 'Avô/Avó'), ('Outro', 'Outro')], max_length=50, verbose_name='Parentesco')),
                ('telefone_responsavel', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='O telefone deve estar no formato (XX) XXXXX-XXXX.', regex='^\\(\\d{2}\\) \\d{4,5}-\\d{4}$')], verbose_name='Telefone do Responsável')),
                ('responsavel_legal', models.BooleanField(default=False, verbose_name='Responsável Legal')),
            ],
            options={
                'verbose_name': 'Indicador de Transporte',
                'verbose_name_plural': 'Indicadores de Transporte',
                'db_table': 'semedapp_indicadorestransporte',
            },
        ),
        migrations.CreateModel(
            name='InscricaoPlanetario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('telefone', models.CharField(max_length=15)),
                ('atividade', models.CharField(max_length=200)),
                ('mensagem', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LancamentoDiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('historico', models.CharField(max_length=191)),
                ('recebimento', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('pagamento', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('saldo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Legislacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=191)),
                ('descricao', models.TextField()),
                ('data_publicacao', models.DateField()),
                ('categoria', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Membro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('funcao', models.CharField(blank=True, max_length=191, null=True)),
                ('data_admissao', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MembroConselho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inep', models.CharField(max_length=20)),
                ('escola', models.CharField(max_length=191)),
                ('conselho', models.CharField(blank=True, max_length=191, null=True)),
                ('data_abertura', models.DateField()),
                ('data_vencimento', models.DateField()),
                ('nome', models.CharField(max_length=191)),
                ('funcao', models.CharField(choices=[('Conselho Fiscal - Efetivo', 'Conselho Fiscal - Efetivo'), ('Conselho Fiscal - Suplente', 'Conselho Fiscal - Suplente'), ('Conselho Deliberativo', 'Conselho Deliberativo')], max_length=50)),
                ('endereco', models.CharField(max_length=191)),
                ('bairro', models.CharField(max_length=100)),
                ('telefone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('cep', models.CharField(max_length=10)),
                ('cpf', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('url', models.CharField(max_length=191, unique=True)),
            ],
            options={
                'db_table': 'semedapp_module',
            },
        ),
        migrations.CreateModel(
            name='OrientadoresAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_orientador', models.CharField(max_length=191)),
                ('escola', models.CharField(max_length=191)),
                ('ocorrencias_conselho_tutelar', models.IntegerField(default=0)),
                ('ameaca', models.IntegerField(default=0)),
                ('agressao_fisica', models.IntegerField(default=0)),
                ('assedio', models.IntegerField(default=0)),
                ('violencia_sexual', models.IntegerField(default=0)),
                ('exploracao_sexual', models.IntegerField(default=0)),
                ('bullying', models.IntegerField(default=0)),
                ('infrequencia', models.IntegerField(default=0)),
                ('evasao', models.IntegerField(default=0)),
                ('repetencia', models.IntegerField(default=0)),
                ('furtos', models.IntegerField(default=0)),
                ('gravidez_adolescencia', models.IntegerField(default=0)),
                ('explosivos', models.IntegerField(default=0)),
                ('trafico_drogas', models.IntegerField(default=0)),
                ('uso_alcool_drogas', models.IntegerField(default=0)),
                ('vandalismo', models.IntegerField(default=0)),
                ('posse_armas', models.IntegerField(default=0)),
                ('delegacia_civil', models.IntegerField(default=0)),
                ('deaca', models.IntegerField(default=0)),
                ('escuta_especializada', models.IntegerField(default=0)),
                ('creas', models.IntegerField(default=0)),
                ('cras', models.IntegerField(default=0)),
                ('viver_conviver', models.IntegerField(default=0)),
                ('ministerio_publico', models.IntegerField(default=0)),
                ('policia_militar', models.IntegerField(default=0)),
                ('busca_ativa', models.IntegerField(default=0)),
                ('centro_tea', models.IntegerField(default=0)),
                ('caps', models.IntegerField(default=0)),
                ('saude', models.IntegerField(default=0)),
                ('total_geral', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PDDE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField()),
                ('escola', models.CharField(max_length=191)),
                ('status', models.CharField(choices=[('aprovado', 'Aprovado'), ('pendente', 'Pendente')], default='pendente', max_length=20)),
                ('detalhes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Permissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PGEPlanoGestaoEscolar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidade_ensino', models.CharField(max_length=191)),
                ('cargo', models.CharField(max_length=50)),
                ('servidor', models.CharField(max_length=191)),
                ('telefone', models.CharField(max_length=20)),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='pge/')),
                ('enviado', models.BooleanField(default=False)),
                ('deferido_indeferido', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlanoGestaoEscolar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidade_ensino', models.CharField(max_length=191)),
                ('cargo', models.CharField(default='Diretor', max_length=100)),
                ('servidor', models.CharField(max_length=191)),
                ('telefone', models.CharField(max_length=20)),
                ('arquivo', models.FileField(upload_to='pge_planos/')),
                ('status', models.CharField(choices=[('enviado', 'Enviado'), ('deferido', 'Deferido'), ('indeferido', 'Indeferido')], default='Não Enviado', max_length=20)),
                ('enviado', models.BooleanField(default=False)),
                ('data_envio', models.DateTimeField(auto_now_add=True)),
                ('deferido_indeferido', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PortuguesProfessores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.PositiveIntegerField()),
                ('habilidade', models.CharField(max_length=10)),
                ('_401', models.BooleanField(default=False)),
                ('_403', models.BooleanField(default=False)),
                ('_404', models.BooleanField(default=False)),
                ('_406', models.BooleanField(default=False)),
                ('_408', models.BooleanField(default=False)),
                ('_409', models.BooleanField(default=False)),
                ('_410', models.BooleanField(default=False)),
                ('_413', models.BooleanField(default=False)),
                ('_414', models.BooleanField(default=False)),
                ('_415', models.BooleanField(default=False)),
                ('_417', models.BooleanField(default=False)),
                ('_421', models.BooleanField(default=False)),
                ('_423', models.BooleanField(default=False)),
                ('_426', models.BooleanField(default=False)),
                ('_428', models.BooleanField(default=False)),
                ('_429', models.BooleanField(default=False)),
                ('_430', models.BooleanField(default=False)),
                ('_431', models.BooleanField(default=False)),
                ('_432', models.BooleanField(default=False)),
                ('_433', models.BooleanField(default=False)),
                ('_434', models.BooleanField(default=False)),
                ('_435', models.BooleanField(default=False)),
                ('_436', models.BooleanField(default=False)),
                ('_437', models.BooleanField(default=False)),
                ('_438', models.BooleanField(default=False)),
                ('_439', models.BooleanField(default=False)),
                ('_441', models.BooleanField(default=False)),
                ('_442', models.BooleanField(default=False)),
                ('_447', models.BooleanField(default=False)),
                ('_451', models.BooleanField(default=False)),
                ('_471', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessorEI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidade_ensino', models.CharField(max_length=191)),
                ('ano', models.IntegerField()),
                ('modalidade', models.CharField(max_length=191)),
                ('formato_letivo', models.CharField(max_length=191)),
                ('turma', models.CharField(max_length=191)),
                ('nome_professor', models.CharField(max_length=191)),
                ('cpf_professor', models.CharField(max_length=14)),
                ('email_professor', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191, unique=True, verbose_name='Nome do Programa')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição do Programa')),
                ('resolucao', models.CharField(blank=True, max_length=191, null=True, verbose_name='Resolução')),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Fim')),
            ],
        ),
        migrations.CreateModel(
            name='Proponente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('cpf_cnpj', models.CharField(max_length=18, unique=True)),
                ('email', models.EmailField(max_length=191, unique=True)),
                ('telefone', models.CharField(max_length=50)),
                ('endereco', models.CharField(max_length=191)),
                ('bairro', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2)),
                ('cep', models.CharField(max_length=9)),
                ('tipo_proponente', models.CharField(choices=[('Pessoa Física', 'Pessoa Física'), ('Pessoa Jurídica', 'Pessoa Jurídica')], max_length=20)),
                ('representante_legal', models.CharField(blank=True, max_length=191, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prova',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('data', models.DateField()),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Regimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('capitulo', models.CharField(max_length=200)),
                ('tipo_alteracao', models.CharField(max_length=100)),
                ('justificativa', models.TextField()),
                ('nome_completo', models.CharField(max_length=200)),
                ('cpf', models.CharField(max_length=25)),
                ('email', models.EmailField(max_length=254)),
                ('telefone', models.CharField(max_length=15)),
                ('cargo', models.CharField(max_length=100)),
                ('lotacao', models.CharField(max_length=100)),
                ('observacoes_adicionais', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RegimentoCadastro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=191)),
                ('capitulo', models.CharField(max_length=191)),
                ('tipo_alteracao', models.CharField(max_length=50)),
                ('justificativa', models.TextField()),
                ('nome_completo', models.CharField(max_length=191)),
                ('email', models.EmailField(max_length=254)),
                ('cpf', models.CharField(max_length=25)),
                ('telefone', models.CharField(max_length=20)),
                ('cargo', models.CharField(max_length=191)),
                ('lotacao', models.CharField(max_length=191)),
                ('observacoes_adicionais', models.TextField(blank=True, null=True)),
                ('data_submissao', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], default='pendente', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Registro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=191)),
                ('capitulo', models.CharField(max_length=191)),
                ('tipo_alteracao', models.CharField(choices=[('insercao', 'Inserção'), ('alteracao', 'Alteração'), ('supressao', 'Supressão'), ('exclusao', 'Exclusão')], max_length=100)),
                ('justificativa', models.TextField()),
                ('nome_completo', models.CharField(max_length=191)),
                ('email', models.EmailField(max_length=254)),
                ('cpf', models.CharField(max_length=25)),
                ('telefone', models.CharField(max_length=15)),
                ('cargo', models.CharField(max_length=191)),
                ('lotacao', models.CharField(max_length=191)),
                ('observacoes_adicionais', models.TextField(blank=True, null=True)),
                ('data_submissao', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Relatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=50)),
                ('ano', models.IntegerField()),
                ('escola', models.CharField(max_length=191)),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
                ('arquivo', models.FileField(upload_to='manuals/')),
            ],
        ),
        migrations.CreateModel(
            name='RepresentanteLegal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefone', models.CharField(max_length=15)),
                ('cargo', models.CharField(max_length=191)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('neighborhood', models.CharField(max_length=191)),
                ('address', models.CharField(max_length=191)),
                ('cep', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SemedAppRegimentoCadastro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=191)),
                ('capitulo', models.CharField(blank=True, max_length=191, null=True)),
                ('tipo_alteracao', models.CharField(max_length=191)),
                ('nome_completo', models.CharField(max_length=191)),
                ('email', models.EmailField(max_length=254)),
                ('cpf', models.CharField(max_length=25)),
                ('telefone', models.CharField(max_length=20)),
                ('cargo', models.CharField(max_length=191)),
                ('lotacao', models.CharField(max_length=191)),
                ('data_submissao', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SIGEAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_unidade_ensino', models.CharField(max_length=191)),
                ('ano_serie', models.CharField(blank=True, max_length=100, null=True)),
                ('nome_turma', models.CharField(blank=True, max_length=100, null=True)),
                ('classificacao_nome', models.CharField(max_length=100)),
                ('tipo_ocorrencia_nome', models.CharField(max_length=191)),
                ('registro', models.DateTimeField()),
                ('status_descricao', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'SIGE Atendimento',
                'verbose_name_plural': 'SIGE Atendimentos',
                'db_table': 'sige_atendimento',
            },
        ),
        migrations.CreateModel(
            name='SOEAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_unidade_ensino', models.CharField(max_length=191)),
                ('ano_serie', models.CharField(max_length=50)),
                ('nome_turma', models.CharField(max_length=100)),
                ('classificacao_nome', models.CharField(max_length=100)),
                ('tipo_ocorrencia_nome', models.CharField(max_length=100)),
                ('registro', models.DateTimeField()),
                ('status_descricao', models.CharField(max_length=50)),
                ('fonte_dado', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'soe_atendimento',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_matricula', models.CharField(max_length=20, unique=True)),
                ('nome_completo', models.CharField(max_length=191)),
                ('escola', models.CharField(max_length=191)),
                ('data_nascimento', models.DateField()),
                ('sexo', models.CharField(max_length=10)),
                ('turno', models.CharField(max_length=20)),
                ('telefone', models.CharField(max_length=20)),
                ('nivel_escolaridade', models.CharField(max_length=50)),
                ('endereco', models.CharField(max_length=191)),
                ('bairro', models.CharField(max_length=100)),
                ('cep', models.CharField(max_length=10)),
                ('codigo_rota', models.CharField(max_length=20)),
                ('email_responsavel', models.EmailField(max_length=254)),
                ('cpf_responsavel', models.CharField(max_length=20)),
                ('nome_responsavel', models.CharField(max_length=191)),
                ('parentesco', models.CharField(max_length=50)),
                ('telefone_responsavel', models.CharField(max_length=20)),
                ('responsavel_legal', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SynapticAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_unidade_ensino', models.CharField(max_length=191)),
                ('ano_serie', models.CharField(max_length=191)),
                ('nome_turma', models.CharField(max_length=191)),
                ('classificacao_nome', models.CharField(max_length=191)),
                ('tipo_ocorrencia_nome', models.CharField(max_length=191)),
                ('registro', models.DateTimeField()),
                ('status_descricao', models.CharField(max_length=191)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'synaptic_atendimento',
            },
        ),
        migrations.CreateModel(
            name='TipoDemanda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191, verbose_name='Nome da Demanda')),
                ('descricao', models.TextField(blank=True, max_length=500, null=True, verbose_name='Descrição')),
                ('status', models.CharField(choices=[('Pendente', 'Pendente'), ('Em andamento', 'Em andamento'), ('Finalizado', 'Finalizado'), ('Cancelado', 'Cancelado'), ('Aguardando', 'Aguardando'), ('Atrasado', 'Atrasado')], default='Pendente', max_length=20, verbose_name='Status')),
                ('destinatario', models.CharField(max_length=100, verbose_name='Destinatário')),
                ('prioridade', models.CharField(choices=[('Baixa', 'Baixa'), ('Média', 'Média'), ('Alta', 'Alta'), ('Urgente', 'Urgente'), ('Imediata', 'Imediata')], default='Média', max_length=10, verbose_name='Prioridade')),
                ('responsavel', models.CharField(max_length=100, verbose_name='Responsável')),
                ('data_entrega', models.DateField(verbose_name='Data de Entrega')),
                ('data_cadastro', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Tipo de Demanda',
                'verbose_name_plural': 'Tipos de Demandas',
                'ordering': ['-data_cadastro'],
            },
        ),
        migrations.CreateModel(
            name='UnidadeEscolar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('endereco', models.CharField(blank=True, max_length=191, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('file', models.FileField(upload_to='uploads/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUserProf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_coordenador', models.BooleanField(default=False)),
                ('is_professor', models.BooleanField(default=False)),
                ('matricula', models.CharField(max_length=15, unique=True, verbose_name='Matrícula')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('especializacao', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos aos quais este usuário pertence.', related_name='customuserprof_set', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas para este usuário.', related_name='customuserprof_permissions', to='auth.permission', verbose_name='permissões de usuário')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pessoa_nome', models.CharField(max_length=191)),
                ('cpf', models.CharField(blank=True, max_length=25, null=True)),
                ('idade', models.IntegerField(blank=True, null=True)),
                ('modalidade', models.CharField(blank=True, max_length=50, null=True)),
                ('avaliado', models.CharField(choices=[('SIM', 'Sim'), ('NAO', 'Não')], default='NAO', max_length=10)),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Acompanhamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='CadastroEI',
            fields=[
                ('id_matricula', models.AutoField(primary_key=True, serialize=False)),
                ('unidade_ensino', models.CharField(max_length=191)),
                ('formato_letivo', models.CharField(blank=True, max_length=191, null=True)),
                ('cpf', models.CharField(max_length=25)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('ano', models.CharField(max_length=4)),
                ('modalidade', models.CharField(max_length=100)),
                ('pessoa_nome', models.CharField(max_length=191)),
                ('idade', models.IntegerField()),
                ('avaliado', models.CharField(choices=[('SIM', 'Sim'), ('NAO', 'Não')], default='NAO', max_length=3)),
                ('questao_matematica_1', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_2', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_3', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_4', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_5', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_6', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_7', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_8', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_9', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_matematica_10', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_11', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_12', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_13', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_14', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_15', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_16', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_17', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_18', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_19', models.CharField(blank=True, max_length=50, null=True)),
                ('questao_linguagem_20', models.CharField(blank=True, max_length=50, null=True)),
                ('coordenador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cadastros_como_coordenador', to=settings.AUTH_USER_MODEL)),
                ('id_coordenador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cadastros_como_id_coordenador', to=settings.AUTH_USER_MODEL)),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candidato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=191)),
                ('nome', models.CharField(max_length=191)),
                ('email', models.EmailField(max_length=254)),
                ('cpf', models.CharField(max_length=25)),
                ('data_nascimento', models.DateField()),
                ('maior_de_18', models.BooleanField()),
                ('nome_responsavel', models.CharField(blank=True, max_length=191, null=True)),
                ('tipo_responsavel', models.CharField(blank=True, choices=[('mae', 'Mãe'), ('pai', 'Pai'), ('responsavel_legal', 'Responsável Legal')], max_length=20, null=True)),
                ('telefone', models.CharField(max_length=15)),
                ('telefone_2', models.CharField(blank=True, max_length=15, null=True)),
                ('endereco', models.CharField(max_length=191)),
                ('bairro', models.CharField(max_length=100)),
                ('ponto_referencia', models.CharField(blank=True, max_length=191, null=True)),
                ('possui_necessidade_especial', models.BooleanField()),
                ('necessidade_especial', models.CharField(blank=True, choices=[('baixa_visao', 'Baixa visão'), ('cegueira', 'Cegueira'), ('auditiva', 'Auditiva'), ('fisica', 'Deficiência Física'), ('intelectual', 'Deficiência Intelectual')], max_length=50, null=True)),
                ('turno_disponivel', models.CharField(choices=[('manha', 'Manhã'), ('tarde', 'Tarde'), ('noite', 'Noite')], max_length=10)),
                ('etapa_pretendida', models.CharField(choices=[('etapa_i', 'Etapa I Ensino Fundamental I (1º 2º 3º ano)'), ('etapa_ii', 'Etapa II Ensino Fundamental I (4º 5º ano)'), ('etapa_iii', 'Etapa III Ensino Fundamental II')], max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CandidatoAutenticado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CandidatoCurriculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=191)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('password', models.CharField(max_length=191)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CandidatoD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(max_length=25, unique=True, verbose_name='CPF')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('endereco', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='Os grupos aos quais o usuário pertence.', related_name='candidatod_set', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas para este usuário.', related_name='candidatod_set', to='auth.permission', verbose_name='permissões de usuário')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Conceito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('habilidade', models.CharField(max_length=50)),
                ('conceito', models.CharField(choices=[('CERTO', 'Certo'), ('ERRADO', 'Errado'), ('PARCIAL', 'Parcial')], max_length=50)),
                ('data_resposta', models.DateField(auto_now_add=True)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='Certificado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='certificados/')),
                ('descricao', models.CharField(blank=True, max_length=191, null=True)),
                ('diretor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificados', to='semedapp.diretor')),
            ],
        ),
        migrations.CreateModel(
            name='BemAdquirido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especificacao', models.CharField(max_length=191)),
                ('quantidade', models.IntegerField()),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bens', to='semedapp.documento')),
            ],
        ),
        migrations.AddField(
            model_name='documento',
            name='escola',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='semedapp.escolapdde', verbose_name='Escola'),
        ),
        migrations.CreateModel(
            name='Diretoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('cargo', models.CharField(choices=[('Presidente', 'Presidente'), ('Vice-Presidente', 'Vice-Presidente'), ('Secretário', 'Secretário'), ('Tesoureiro', 'Tesoureiro')], max_length=50)),
                ('endereco', models.CharField(max_length=191)),
                ('bairro', models.CharField(max_length=100)),
                ('telefone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('cep', models.CharField(max_length=10)),
                ('cpf', models.CharField(max_length=25)),
                ('vencimento', models.DateField(blank=True, null=True)),
                ('conselho', models.CharField(blank=True, max_length=191, null=True)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde')),
            ],
        ),
        migrations.CreateModel(
            name='ContaBancaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conselho', models.CharField(blank=True, help_text='Conselho vinculado à escola.', max_length=191, null=True)),
                ('nome', models.CharField(help_text='Nome da conta bancária (ex: Conta Principal)', max_length=100)),
                ('banco', models.CharField(help_text='Nome do banco da conta.', max_length=100)),
                ('agencia', models.CharField(help_text='Número da agência bancária.', max_length=20)),
                ('conta', models.CharField(help_text='Número da conta bancária.', max_length=20)),
                ('saldo', models.DecimalField(decimal_places=2, default=0.0, help_text='Saldo atual da conta bancária.', max_digits=15)),
                ('tipo_conta', models.CharField(choices=[('Corrente', 'Corrente'), ('Poupança', 'Poupança')], default='Corrente', help_text='Tipo da conta bancária.', max_length=10)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contas', to='semedapp.escolapdde')),
                ('programa', models.ForeignKey(blank=True, help_text='Programa vinculado à conta bancária.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='semedapp.programa')),
            ],
            options={
                'ordering': ['escola', 'banco'],
            },
        ),
        migrations.CreateModel(
            name='ConselhoMembro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('cargo', models.CharField(max_length=100)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde')),
            ],
        ),
        migrations.CreateModel(
            name='BemDoado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conselho', models.CharField(max_length=191, verbose_name='Conselho Escolar')),
                ('descricao', models.CharField(max_length=191, verbose_name='Descrição do Bem')),
                ('quantidade', models.PositiveIntegerField()),
                ('numero_nota', models.CharField(max_length=50, verbose_name='Nº Nota Fiscal')),
                ('data_nota', models.DateField(verbose_name='Data da Nota Fiscal')),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valor_total', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('data_doacao', models.DateField(auto_now_add=True)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde', verbose_name='Escola')),
            ],
        ),
        migrations.CreateModel(
            name='Bem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_conselho', models.CharField(blank=True, max_length=191, null=True, verbose_name='Nome do Conselho')),
                ('nome', models.CharField(max_length=191, verbose_name='Nome do Bem')),
                ('documento', models.FileField(upload_to='documentos_bens/', verbose_name='Documento de Aquisição')),
                ('quantidade', models.PositiveIntegerField(verbose_name='Quantidade')),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário (R$)')),
                ('valor_total', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Total (R$)')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde', verbose_name='Escola')),
            ],
        ),
        migrations.CreateModel(
            name='Escolas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('unidade_educacional', models.CharField(blank=True, max_length=191, null=True)),
                ('endereco', models.CharField(blank=True, max_length=191, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('diretor', models.CharField(blank=True, max_length=191, null=True)),
                ('coordenador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='escolas_coordenadas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuserprof',
            name='escola',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='professores', to='semedapp.escolas'),
        ),
        migrations.AddField(
            model_name='customuserprof',
            name='escolas',
            field=models.ManyToManyField(blank=True, related_name='professores_customuser', to='semedapp.escolas'),
        ),
        migrations.CreateModel(
            name='AtendimentoSOE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField()),
                ('descricao', models.TextField()),
                ('nome_unidade_ensino', models.CharField(max_length=191)),
                ('ano_serie', models.CharField(blank=True, max_length=100, null=True)),
                ('nome_turma', models.CharField(blank=True, max_length=100, null=True)),
                ('classificacao_nome', models.CharField(max_length=100)),
                ('tipo_ocorrencia_nome', models.CharField(max_length=191)),
                ('registro', models.DateTimeField()),
                ('status_descricao', models.CharField(max_length=50)),
                ('fonte_dado', models.CharField(choices=[('SIGE', 'SIGE'), ('Synaptic', 'Synaptic'), ('Orientadores', 'Orientadores'), ('SOE', 'SOE'), ('AutoKee', 'AutoKee')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('estudante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.estudante')),
            ],
            options={
                'db_table': 'atendimento_soe',
            },
        ),
        migrations.CreateModel(
            name='Experiencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empresa', models.CharField(max_length=191)),
                ('cargo', models.CharField(max_length=191)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('descricao_experiencia', models.TextField(blank=True, null=True)),
                ('curriculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiencias', to='semedapp.curriculo')),
            ],
        ),
        migrations.CreateModel(
            name='ExperienciaProfissional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empresa', models.CharField(max_length=191)),
                ('cargo', models.CharField(max_length=191)),
                ('data_inicio', models.DateField(blank=True, null=True)),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('diretor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiencias', to='semedapp.diretor')),
            ],
        ),
        migrations.CreateModel(
            name='Formacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel_educacional', models.CharField(choices=[('Medio', 'Médio'), ('MedioTecnico', 'Médio Técnico'), ('Graduado', 'Graduado'), ('GraduadoIncompleto', 'Graduação Incompleta'), ('Especialista', 'Especialista'), ('Mestre', 'Mestre'), ('Doutor', 'Doutor')], max_length=20)),
                ('curso', models.CharField(max_length=191)),
                ('instituicao', models.CharField(max_length=191)),
                ('ano_conclusao', models.DateField()),
                ('curriculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formacoes', to='semedapp.curriculo')),
            ],
        ),
        migrations.CreateModel(
            name='FormacaoAcademica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(max_length=100)),
                ('instituicao', models.CharField(max_length=191)),
                ('curso', models.CharField(max_length=191)),
                ('ano_conclusao', models.DateField()),
                ('diretor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formacoes', to='semedapp.diretor')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('unidade_medida', models.CharField(max_length=50)),
                ('categoria', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='semedapp.categoria')),
            ],
        ),
        migrations.CreateModel(
            name='LancamentoBancario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data do Lançamento')),
                ('descricao', models.CharField(max_length=191, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('credito', 'Entrada'), ('debito', 'Saída')], max_length=7, verbose_name='Tipo de Lançamento')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor (R$)')),
                ('origem_destino', models.CharField(blank=True, max_length=191, null=True, verbose_name='Origem/Destino')),
                ('comprovante', models.FileField(blank=True, null=True, upload_to='comprovantes/', verbose_name='Comprovante')),
                ('categoria', models.CharField(blank=True, max_length=100, null=True, verbose_name='Categoria')),
                ('conta_bancaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lancamentos', to='semedapp.contabancaria', verbose_name='Conta Bancária')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde', verbose_name='Escola')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
        ),
        migrations.CreateModel(
            name='LivroCaixa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano_base', models.IntegerField()),
                ('conselho_escolar', models.CharField(max_length=191)),
                ('cnpj', models.CharField(max_length=20)),
                ('rendimentos_aplicacao', models.DecimalField(decimal_places=2, max_digits=10)),
                ('saldo_anterior', models.DecimalField(decimal_places=2, max_digits=10)),
                ('receita_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('despesas_manutencao', models.DecimalField(decimal_places=2, max_digits=10)),
                ('despesa_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('superavit_deficit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde')),
            ],
        ),
        migrations.CreateModel(
            name='ModuleAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(choices=[('configuracao', 'Configuração'), ('indicadores', 'Indicadores'), ('pedagogico', 'Pedagógico'), ('contabilidade', 'Contabilidade'), ('curriculos', 'Banco de Currículos'), ('site_semed', 'Site Semed')], max_length=50)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'semedapp_module_access',
            },
        ),
        migrations.CreateModel(
            name='ModuleModulosPermitidos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customuserprof', models.ForeignKey(db_column='customuserprof_id', on_delete=django.db.models.deletion.CASCADE, related_name='modulos_permitidos', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(db_column='module_id', on_delete=django.db.models.deletion.CASCADE, to='semedapp.module')),
            ],
            options={
                'db_table': 'semedapp_modulemodulospermitidos',
            },
        ),
        migrations.CreateModel(
            name='ModulePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='semedapp.module')),
            ],
            options={
                'db_table': 'semedapp_module_permission',
            },
        ),
        migrations.CreateModel(
            name='NotaAluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplina', models.CharField(max_length=100)),
                ('nota', models.DecimalField(decimal_places=2, max_digits=4)),
                ('bimestre', models.IntegerField(choices=[(1, '1º Bimestre'), (2, '2º Bimestre'), (3, '3º Bimestre'), (4, '4º Bimestre')])),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.cadastroei')),
            ],
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programa', models.CharField(max_length=191)),
                ('nome_favorecido', models.CharField(max_length=191)),
                ('cnpj_cpf', models.CharField(blank=True, max_length=25, null=True)),
                ('tipo_pagamento', models.CharField(choices=[('Custeio', 'Custeio'), ('Capital', 'Capital')], max_length=50)),
                ('tipo_bem_servico', models.TextField()),
                ('origem', models.CharField(default='FNDE', max_length=50)),
                ('tipo_documento', models.CharField(choices=[('NF', 'Nota Fiscal'), ('Cupom', 'Cupom Fiscal'), ('PIX', 'PIX'), ('Boleto', 'Boleto'), ('Outros', 'Outros')], max_length=50)),
                ('numero_documento', models.CharField(max_length=100)),
                ('data_documento', models.DateField()),
                ('tipo_pagamento_efetuado', models.CharField(choices=[('Dinheiro', 'Dinheiro'), ('PIX', 'PIX'), ('TED', 'TED'), ('Cartão de Crédito', 'Cartão de Crédito'), ('Cartão de Débito', 'Cartão de Débito'), ('Cheque', 'Cheque'), ('Outros', 'Outros')], max_length=50)),
                ('numero_documento_pagamento', models.CharField(max_length=100)),
                ('data_pagamento', models.DateField()),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('exercicio', models.IntegerField()),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde')),
            ],
        ),
        migrations.CreateModel(
            name='MotivoIndeferimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivo', models.TextField()),
                ('prazo_reenvio', models.DateField()),
                ('parecer_direcao', models.CharField(choices=[('Diretor', 'Diretor de Ensino'), ('Vice-Diretor', 'Coordenador(a)')], max_length=50)),
                ('orientacoes', models.TextField(blank=True, null=True)),
                ('anexo_parecer', models.FileField(blank=True, null=True, upload_to='indeferimentos/')),
                ('data_registro', models.DateTimeField(auto_now_add=True)),
                ('plano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motivos', to='semedapp.planogestaoescolar')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EscolaPrograma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(blank=True, null=True, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Fim')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programas_escola', to='semedapp.escolapdde', verbose_name='Escola')),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escolas_participantes', to='semedapp.programa', verbose_name='Programa')),
            ],
        ),
        migrations.CreateModel(
            name='EscolaPddeProgramas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('escolapdde', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde')),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.programa')),
            ],
        ),
        migrations.AddField(
            model_name='escolapdde',
            name='programas',
            field=models.ManyToManyField(blank=True, related_name='escolas', to='semedapp.programa'),
        ),
        migrations.CreateModel(
            name='Orcamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.item')),
                ('proponente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.proponente')),
            ],
        ),
        migrations.CreateModel(
            name='ApuracaoResultado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('preco_vencedor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valor_total', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('data_apuracao', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pendente', 'Pendente'), ('Adjudicado', 'Adjudicado'), ('Revogado', 'Revogado')], default='Pendente', max_length=20)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.item')),
                ('proponente_vencedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.proponente')),
            ],
        ),
        migrations.CreateModel(
            name='Proposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1)),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valor_total', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('data_proposta', models.DateField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.item')),
                ('proponente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.proponente')),
            ],
        ),
        migrations.CreateModel(
            name='Receita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programa', models.CharField(max_length=191)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField(default='2025-12-31')),
                ('saldo_anterior_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('saldo_anterior_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('valor_creditado_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('valor_creditado_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('recursos_proprios_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('recursos_proprios_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('rendimento_aplicacao_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('rendimento_aplicacao_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('devolucao_fnde_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('devolucao_fnde_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('saldo_reprogramar_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('saldo_reprogramar_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('saldo_devolvido_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('saldo_devolvido_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('valor_total_receita_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('valor_total_receita_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('valor_despesa_realizada_custeio', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('valor_despesa_realizada_capital', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('escolas_atendidas', models.IntegerField(default=1)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receitas', to='semedapp.escolapdde')),
            ],
        ),
        migrations.CreateModel(
            name='ReceitaDespesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programa', models.CharField(max_length=191)),
                ('tipo', models.CharField(choices=[('receita', 'Receita'), ('despesa', 'Despesa')], default='receita', max_length=10)),
                ('periodo_execucao', models.IntegerField()),
                ('saldo_anterior_custeio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('saldo_anterior_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('valor_creditado_custeio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('valor_creditado_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('recursos_proprios_custeio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('recursos_proprios_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('rendimento_aplicacao_custeio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('rendimento_aplicacao_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('devolucao_fnde_custeio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('devolucao_fnde_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_receita', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_despesa', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('saldo_reprogramar_custeio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('saldo_reprogramar_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('saldo_devolvido_custeio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('saldo_devolvido_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('escolas_atendidas', models.IntegerField(default=0)),
                ('saldo_disponivel', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receitadespesa', to='semedapp.escolapdde')),
            ],
        ),
        migrations.CreateModel(
            name='Resposta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conceito', models.CharField(choices=[('CERTO', 'Certo'), ('ERRADO', 'Errado'), ('PARCIAL', 'Parcial'), ('BRANCO', 'Branco'), ('LAUDO', 'Criança com Laudo')], max_length=100)),
                ('data_resposta', models.DateField(default=django.utils.timezone.now)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='RoleModulePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('administrador', 'Administrador'), ('coordenador', 'Coordenador'), ('professor', 'Professor'), ('secretaria', 'Secretaria')], max_length=15, verbose_name='Função')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='semedapp.module')),
            ],
            options={
                'db_table': 'semedapp_role_module_permission',
            },
        ),
        migrations.CreateModel(
            name='SemedAppEscolaPddeProgramas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('escolapdde', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde')),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.programa')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.categoria')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='subcategoria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='semedapp.subcategoria'),
        ),
        migrations.CreateModel(
            name='TermoDoacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conselho', models.CharField(max_length=191)),
                ('data_emissao', models.DateField(auto_now_add=True)),
                ('bem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='semedapp.bemdoado')),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolapdde')),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=191)),
                ('ano_letivo', models.IntegerField(default=2025)),
                ('ano', models.IntegerField()),
                ('modalidade', models.CharField(max_length=50)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolas')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessorEscola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('escolas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.escolas')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('turmas', models.ManyToManyField(to='semedapp.turma')),
            ],
        ),
        migrations.CreateModel(
            name='CadastroEscola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unidade_ensino', models.CharField(max_length=191)),
                ('formato_letivo', models.CharField(max_length=50)),
                ('cpf', models.CharField(max_length=25)),
                ('data_nascimento', models.DateField()),
                ('ano', models.IntegerField()),
                ('modalidade', models.CharField(max_length=50)),
                ('pessoa_nome', models.CharField(max_length=191)),
                ('idade', models.IntegerField()),
                ('avaliado', models.CharField(choices=[('SIM', 'Sim'), ('NÃO', 'Não')], max_length=3)),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escolas', to='semedapp.turma')),
            ],
        ),
        migrations.AddField(
            model_name='cadastroei',
            name='turma',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='semedapp.turma'),
        ),
        migrations.AddField(
            model_name='aluno',
            name='turma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alunos', to='semedapp.turma'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Administrador', 'Administrador'), ('Gestor', 'Gestor'), ('Técnico', 'Técnico')], default='Técnico', max_length=15, verbose_name='Função do Usuário')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group', verbose_name='Grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission', verbose_name='Permissões')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='UserModulePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions', to='semedapp.module')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'semedapp_user_module_permission',
            },
        ),
        migrations.CreateModel(
            name='UserPermissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.permissao')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome_completo', models.CharField(max_length=191)),
                ('cpf', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_nascimento', models.DateField()),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('telefone_contato_2', models.CharField(blank=True, max_length=15, null=True)),
                ('telefone_secundario', models.CharField(blank=True, max_length=15, null=True)),
                ('endereco', models.CharField(blank=True, max_length=191, null=True)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('ponto_referencia', models.CharField(blank=True, max_length=191, null=True)),
                ('maior_de_18', models.BooleanField(default=False)),
                ('nome', models.CharField(max_length=191)),
                ('senha', models.CharField(max_length=128)),
                ('responsavel_legal', models.CharField(blank=True, max_length=191, null=True)),
                ('necessidade_especial', models.BooleanField(default=False)),
                ('tipo_necessidade_especial', models.CharField(blank=True, choices=[('Baixa Visão', 'Baixa Visão'), ('Cegueira', 'Cegueira'), ('Auditiva', 'Auditiva'), ('Deficiência Física', 'Deficiência Física'), ('Deficiência Intelectual', 'Deficiência Intelectual')], max_length=50, null=True)),
                ('etapa_matricula', models.CharField(blank=True, choices=[('Etapa I Ensino Fundamental I(1º 2º 3º ano)', 'Etapa I Ensino Fundamental I(1º 2º 3º ano)'), ('Etapa II Ensino Fundamental I(4º 5º ano)', 'Etapa II Ensino Fundamental I(4º 5º ano)'), ('Etapa III', 'Etapa III')], max_length=50, null=True)),
                ('nome_responsavel', models.CharField(blank=True, max_length=191, null=True)),
                ('tipo_responsavel', models.CharField(blank=True, choices=[('Mãe', 'Mãe'), ('Pai', 'Pai'), ('Responsável Legal', 'Responsável Legal')], max_length=50, null=True)),
                ('possui_necessidade_especial', models.BooleanField(default=False)),
                ('necessidade_especial_detalhe', models.CharField(blank=True, choices=[('Baixa Visão', 'Baixa Visão'), ('Cegueira', 'Cegueira'), ('Auditiva', 'Auditiva'), ('Deficiência Física', 'Deficiência Física'), ('Deficiência Intelectual', 'Deficiência Intelectual')], max_length=50, null=True)),
                ('turno_disponivel', models.CharField(blank=True, choices=[('Manhã', 'Manhã'), ('Tarde', 'Tarde'), ('Noite', 'Noite')], max_length=20, null=True)),
                ('etapa_pretendida', models.CharField(blank=True, choices=[('Etapa I Ensino Fundamental I (1º 2º 3º ano)', 'Etapa I Ensino Fundamental I (1º 2º 3º ano)'), ('Etapa II Ensino Fundamental I (4º 5º ano)', 'Etapa II Ensino Fundamental I (4º 5º ano)'), ('Etapa III Ensino Fundamental II', 'Etapa III Ensino Fundamental II')], max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_usuario_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_usuario_permissions_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inscricao', models.DateTimeField(auto_now_add=True)),
                ('responsavel_legal', models.CharField(blank=True, max_length=191, null=True)),
                ('tipo_responsavel', models.CharField(blank=True, max_length=100, null=True)),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('telefone_secundario', models.CharField(blank=True, max_length=15, null=True)),
                ('endereco', models.CharField(blank=True, max_length=191, null=True)),
                ('cidade', models.CharField(blank=True, max_length=191, null=True)),
                ('ponto_referencia', models.CharField(blank=True, max_length=191, null=True)),
                ('necessidade_especial', models.BooleanField(default=False)),
                ('tipo_necessidade_especial', models.CharField(blank=True, max_length=100, null=True)),
                ('turno_disponivel', models.CharField(blank=True, max_length=100, null=True)),
                ('etapa_pretendida', models.CharField(blank=True, max_length=191, null=True)),
                ('prova_realizada', models.BooleanField(default=False)),
                ('nota', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('aprovado', models.BooleanField(default=False)),
                ('cpf_responsavel', models.CharField(blank=True, max_length=11, null=True)),
                ('rg_responsavel', models.CharField(blank=True, max_length=12, null=True)),
                ('nota_prova', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('local_exame', models.CharField(choices=[('CMEJA', 'CMEJA Jose de Deus Andrade'), ('SEBASTIAO_AGRIPINO', 'EMEF Sebastião Agripino da Silva'), ('MARIA_LOURDES', 'EMEF Maria de Lourdes Rocha Rodrigues'), ('ADELAIDE_MOLINARI', 'EMEIF Adelaide Molinari'), ('RAIMUNDO_OLIVEIRA', 'EMEIF Raimundo de Oliveira'), ('TEOTONIO_VILELA', 'EMEIF Teotonio Vilela')], default='CMEJA', max_length=30, verbose_name='Local de realização das provas')),
                ('escola', models.CharField(choices=[('NAO_ESTUDANDO', 'NÃO ESTOU ESTUDANDO EM 2024'), ('CMEJA_JOSE_DE_DEUS_ANDRADE', 'CMEJA JOSÉ DE DEUS ANDRADE'), ('EMEIF_ADELAIDE_MOLINARI', 'EMEIF ADELAIDE MOLINARI'), ('EMEIF_CARLOS_HENRIQUE', 'EMEIF CARLOS HENRIQUE'), ('EMEIF_JUSCELINO_KUBITSCHEK', 'EMEIF JUSCELINO KUBITSCHEK'), ('EMEIF_MAGALHAES_BARATA', 'EMEIF MAGALHÃES BARATA'), ('EMEIF_RAIMUNDO_OLIVEIRA', 'EMEIF RAIMUNDO DE OLIVEIRA'), ('EMEIF_TEOTONIO_VILELA', 'EMEIF TEOTÔNIO VILELA'), ('EMEF_BENEDITA_TORRES', 'EMEF BENEDITA TORRES'), ('EMEF_SEBASTIAO_AGRIPINO', 'EMEF SEBASTIÃO AGRIPINO DA SILVA'), ('EMEF_ALEXSANDRO_NUNES', 'EMEF ALEXSANDRO NUNES DE SOUZA GOMES'), ('EMEF_CARMELO_MENDES', 'EMEF CARMELO MENDES DA SILVA'), ('EMEB_LUIS_CARLOS_PRESTES', 'EMEB LUÍS CARLOS PRESTES'), ('EMEF_JOAO_NELSON', 'EMEF JOÃO NELSON DOS PRAZERES HENRIQUES'), ('EMEF_MARIA_DE_LOURDES', 'EMEF MARIA DE LOURDES ROCHA RODRIGUES'), ('EMEB_RONILTON_ARIDAL', 'EMEB RONILTON ARIDAL DA SILVA GRILO'), ('EMEB_GERCINO_CORREA', 'EMEB GERCINO CORREA'), ('EMEIF_TANCREDO', 'EMEIF TANCREDO DE ALMEIDA NEVES'), ('EMEIF_FRANCISCA_ROMANA', 'EMEIF FRANCISCA ROMANA')], default='NAO_ESTUDANDO', max_length=50, verbose_name='Nome da escola onde está matriculado em 2024')),
                ('dia_realizacao_prova', models.DateField(default='2024-12-01', verbose_name='Dia de realização da prova')),
                ('prova_todas_disciplinas', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], default='Não', max_length=3, verbose_name='Deseja realizar a prova de todas as disciplinas?')),
                ('exame_supletivo', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não')], default='Não', max_length=3, verbose_name='Já fez a prova do exame supletivo anteriormente, ofertado pelo município de Canaã dos Carajás?')),
                ('status', models.CharField(choices=[('inscrito', 'Inscrito'), ('approved', 'Aprovado'), ('analise', 'Analise')], default='Inscrito', max_length=20)),
                ('bairro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='semedapp.bairro')),
                ('disciplinas', models.ManyToManyField(blank=True, related_name='inscricoes_disciplinas', to='semedapp.disciplina')),
                ('disciplinas_aprovadas', models.ManyToManyField(blank=True, related_name='inscricoes_aprovadas', to='semedapp.disciplina')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('candidato', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inscricao', to='semedapp.usuario')),
            ],
        ),
        migrations.AddConstraint(
            model_name='contabancaria',
            constraint=models.UniqueConstraint(fields=('escola', 'banco', 'agencia', 'conta'), name='unique_conta_bancaria_por_escola'),
        ),
    ]
